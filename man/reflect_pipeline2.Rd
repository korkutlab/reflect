% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{reflect_pipeline2}
\alias{reflect_pipeline2}
\title{Run a REFLECT Pipeline Given a Precomputed Tunning Parameter}
\usage{
reflect_pipeline2(
  wbound,
  mat_value,
  df_sample,
  df_feature = NULL,
  dissimilarity = c("squared.distance", "absolute.value"),
  nperms = 10,
  min_number_features = 10,
  pval_threshold = 0.05
)
}
\arguments{
\item{wbound}{The precalculated tunning parameter for sparse hierarchial clustering.}

\item{mat_value}{A matrix of expression/alteration with samples as rows and features as columns.}

\item{df_sample}{A data frame of samples including tumor types and stratification status. It must contain columns: SampleID, TumorType, Stratification.}

\item{df_feature}{A data frame that annotates function scores and actionabilities of features. It must contains columns: Feature, FunctionScore, IsActionable. If df_feature = NULL, both 1 (activating) and -1 (inhibiting) are considered as function scores for each feature, and all features are considered as being actionable.}

\item{dissimilarity}{A string for the type of dissimilarity, either "squared.distance" or "absolute.value". Default "squared.distance".}

\item{nperms}{The number of permutations to perform. Default 10.}

\item{min_number_features}{The minimal number of features that the best wbound could generate. Only wbounds that generates more than this number of features can considered. Default 10.}

\item{pval_threshold}{The threshold of P value below which are considered statistically significant. Default 0.05.}
}
\value{
\item{shc}{An object of class hclust which describes the tree produced by the clustering process. See detial in function sparse_hclust.} \item{mat_recur_pval}{A matrix of recurrence P values. See detial in function get_recur_pval.} \item{recur_actionable}{An object for rcurrent and acitionable features. See detial in function get_recur_actionable_features.} \item{df_coaltered_targets}{A data frame of samples that have both stratification status and recurrent/actionable features for each sample. See detial in function get_coaltered_targets.}
}
\description{
Given a precomputed tunning parameter, an expression/alteration matrix and annotations of samples and features, the REFLECT pipeline nominates co-altered, recurrent, actionable combination targets. The tunning parameter wbound is selected based on a permuation approach. Since obtaining a tunning parameter through gap statitic may take a long time, this pipeline can same computational cost if the tunning parameter is precomputed.
}
\examples{
library(reflect)
mat_value <- egfr_data$mat_value
gapstat_bestwbound <- get_best_wbound(mat_value)
wbound <- gapstat_bestwbound$best_wbound

df_sample <- egfr_data$df_sample
df_feature <- egfr_data$df_feature
res <- reflect_pipeline2(wbound, mat_value, df_sample, df_feature)
}
